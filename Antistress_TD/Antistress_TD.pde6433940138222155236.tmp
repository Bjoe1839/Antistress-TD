int draggingStatus;
TowerButton[] towerButtons = new TowerButton[5];
Tower draggedTower;
Square[][] squares = new Square[10][5];

void setup() {
  fullScreen();
  rectMode(CORNERS);

  startUp();
}

void draw() {
  fill(200);
  rect(-1, height*0.85, width, height);

  for (int i = 0; i < squares.length; i++) for (int j = 0; j < squares[0].length; j++) {
    fill(255);
    squares[i][j].display();
  }

  //towerButtons
  boolean hovering = false;
  for (TowerButton t : towerButtons) if (t.collision()) {
    hovering = true;
  }

  if (hovering || draggingStatus > 0) cursor(HAND);
  else cursor(ARROW);


  //display towerbuttons
  for (TowerButton t : towerButtons) {
    if (draggingStatus == t.towerNum) {
      t.display(2);
    } else if (t.collision() && draggingStatus < 1) {
      t.display(1);
    } else {
      t.display(0);
    }
  }

  //dragged tower
  if (draggingStatus > 0) {
    draggedTower = new Tower(mouseX, mouseY, draggingStatus);
    draggedTower.display();
  }
}

void mousePressed() {
  for (TowerButton t : towerButtons) {
    if (t.collision()) {
      draggingStatus = t.towerNum;
    }
  }
}

void mouseReleased() {
  //hvis der var drag før er der ikke mere
  draggingStatus = 0;
}


void startUp() {
  for (int i = 0; i < towerButtons.length; i++) {
    towerButtons[i] = new TowerButton(int(width*0.13) + i*int(width*0.13), int(height*0.87), int(width*0.20) + i*int(width*0.13), int(height*0.93), "Tårn "+(i+1), i+1);
  }
  for (int i = 0; i < squares.length; i++) for (int j = 0; j < squares[0].length; j++) {
    int dx = width/squares.length;
    int dy = int(height*0.85/squares[0].length);
    squares[i][j] = new Square(i*dx, j*dy, (i+1)*dx, (j+1)*dy);
  }
}
