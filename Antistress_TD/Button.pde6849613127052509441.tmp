class Button {
  int x1, y1, x2, y2;

  Button(int x1_, int y1_, int x2_, int y2_) {
    x1 = x1_;
    y1 = y1_;
    x2 = x2_;
    y2 = y2_;
  }

  boolean collision() {
    if (mouseX >= x1 && mouseX <= x2 && mouseY >= y1 && mouseY <= y2) return true;
    return false;
  }

  void display() {
  }
}


class DragButton extends Button {
  String text;

  DragButton(int x1, int y1, int x2, int y2) {
    super(x1, y1, x2, y2);
  }

  void display(int status) {
    if (status == 0) fill(255);
    else if (status == 1) fill(240);
    else fill(220);

    rect(x1, y1, x2, y2, 5);
    fill(0);

    if (collision() && draggingStatus == 0) {
      fill(255, 200);
      int len = x2-x1;
      rect(mouseX-len, y1-220, mouseX+len, y1-10, 10);
      fill(0);
      text(text, mouseX-len+5, y1-200);
    }
  }
}


class TowerButton extends DragButton {
  int towerNum;

  TowerButton(int x1, int y1, int x2, int y2, int towerNum_) {
    super(x1, y1, x2, y2);
    towerNum = towerNum_;
    
    //beskrivelsestekst
    text = "Tårn "+towerNum+"\n";
    switch(towerNum) {
    case 1:
      text += "Dette er et tårn. Tester teksten.\nWow det er på flere linjer.\nDet her tårn kan skyde.\n \nGenvejstast: Q";
      break;
    case 2:
      text += "Dette er et tårn. Tester teksten.\nWow det er på flere linjer.\nDet her tårn kan skyde.\n \nGenvejstast: W";
      break;
    case 3:
      text += "Dette er et tårn. Tester teksten.\nWow det er på flere linjer.\nDet her tårn kan skyde.\n \nGenvejstast: E";
      break;
    case 4:
      text += "Dette er et tårn. Tester teksten.\nWow det er på flere linjer.\nDet her tårn kan skyde.\n \nGenvejstast: R";
      break;
    case 5:
      text += "Dette er et tårn. Tester teksten.\nWow det er på flere linjer.\nDet her tårn kan skyde.\n \nGenvejstast: T";
      break;
    }
  }

  void display(int status) {
    super.display(status);
  }
}
